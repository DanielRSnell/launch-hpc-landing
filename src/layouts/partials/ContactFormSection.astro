---
import ImageMod from "@/components/ImageMod.astro";
import config from "@/config/config.json";
import { markdownify } from "@/lib/utils/textConverter";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

const { contact_form_action } = config.params;
const { contact_form } = (
  (await getEntry("contact", "-index")) as CollectionEntry<"contact">
).data;
---

{
  (
    <section class="section" id="assessment-form">
      <div class="container relative">
        <div class="row gy-5">
          <div class="lg:col-5" data-aos="fade-left-sm">
            <div class="flex min-h-full flex-col justify-between">
              {contact_form?.title && (
                <h2
                  class="has-gradient md:mb-6"
                  set:html={markdownify(contact_form.title)}
                />
              )}
              {contact_form?.list && (
                <div class="mt-10 flex flex-col gap-4 md:gap-8 xl:mt-20">
                  {contact_form.list.map((point) => (
                    <div class="flex gap-4">
                      {point.icon && (
                        <div class="flex h-14 w-14 items-center justify-center rounded-lg bg-gradient-to-b from-white/10 to-slate-800/25">
                          <ImageMod
                            class="h-5 w-5"
                            src={point.icon}
                            alt={`icon related to ${point.title}`}
                          />
                        </div>
                      )}
                      <div>
                        {point.title && (
                          <h3
                            class="tracking-none mb-3 text-lg/none"
                            set:html={markdownify(point.title)}
                          />
                        )}
                        {point.description && (
                          <p
                            class="text-lg/none leading-snug opacity-70"
                            set:html={markdownify(point.description)}
                          />
                        )}
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
          <div
            class="lg:col-7 lg:ps-16"
            data-aos="fade-left-sm"
            data-aos-delay="200">
            <div class="rounded-2xl border border-white/5 bg-dark p-5 md:p-16">
              <form id="contact-form" class="row g-4">
                <div class="lg:col-6">
                  <label for="first-name" class="form-label">
                    First Name <span class="text-red-500">*</span>
                  </label>
                  <input
                    id="first-name"
                    name="first-name"
                    class="form-input"
                    required
                    type="text"
                  />
                </div>
                <div class="lg:col-6">
                  <label for="last-name" class="form-label">
                    Last Name <span class="text-red-500">*</span>
                  </label>
                  <input
                    id="last-name"
                    name="last-name"
                    class="form-input"
                    required
                    type="text"
                  />
                </div>
                <div class="lg:col-6">
                  <label for="email" class="form-label">
                    Email <span class="text-red-500">*</span>
                  </label>
                  <input
                    id="email"
                    name="email"
                    class="form-input"
                    required
                    type="email"
                  />
                </div>
                <div class="lg:col-6">
                  <label for="phone" class="form-label">
                    Phone Number
                  </label>
                  <input
                    id="phone"
                    name="phone"
                    class="form-input"
                    type="tel"
                  />
                </div>
                <div class="col-12">
                  <label for="company-name" class="form-label">
                    Company Name <span class="text-red-500">*</span>
                  </label>
                  <input
                    id="company-name"
                    name="company-name"
                    class="form-input"
                    required
                    type="text"
                  />
                </div>
                <div class="col-12">
                  <label for="job-title" class="form-label">
                    Job Title <span class="text-red-500">*</span>
                  </label>
                  <input
                    id="job-title"
                    name="job-title"
                    class="form-input"
                    required
                    type="text"
                  />
                </div>
                <div class="col-12">
                  <label for="infrastructure" class="form-label">
                    Current Infrastructure
                  </label>
                  <select
                    id="infrastructure"
                    name="infrastructure"
                    class="form-input">
                    <option value="">Select your current infrastructure</option>
                    <option value="on-premise">On-premise only</option>
                    <option value="cloud">Cloud only</option>
                    <option value="hybrid">Hybrid (On-premise & Cloud)</option>
                    <option value="none">
                      No existing AI/HPC infrastructure
                    </option>
                  </select>
                </div>
                <div class="col-12">
                  <label for="message" class="form-label">
                    Tell us about your AI/HPC needs
                  </label>
                  <textarea
                    id="message"
                    name="message"
                    class="form-input"
                    rows="3"
                    placeholder="Please describe your current workloads, challenges, and goals"
                  />
                </div>
                <div class="col-12">
                  <button
                    id="submit-button"
                    type="submit"
                    class="btn rounded-full border-border text-white">
                    <span class="value">
                      <span data-content="Schedule Assessment">
                        Schedule Assessment
                      </span>
                    </span>
                  </button>
                </div>
                <div id="form-status" class="col-12 mt-4 hidden">
                  <div id="success-message" class="text-green-500 hidden">
                    Thank you! Your message has been submitted successfully.
                  </div>
                  <div id="error-message" class="text-red-500 hidden">
                    There was a problem submitting your form. Please try again.
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>

        <div
          aria-hidden="true"
          class="pointer-events-none absolute -top-14 right-[15%] -z-10 h-[358px] w-[816px] rotate-[-19deg] rounded-full from-secondary/40 from-40% via-secondary via-60% to-primary opacity-20 blur-[100px] bg-gradient-to-tr lg:opacity-40"
        />
      </div>
    </section>
  )
}

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    // Get form elements
    const contactForm = document.getElementById('contact-form');
    const submitButton = document.getElementById('submit-button');
    const formStatus = document.getElementById('form-status');
    const successMessage = document.getElementById('success-message');
    const errorMessage = document.getElementById('error-message');
    
    if (contactForm && submitButton && formStatus && successMessage && errorMessage) {
      // Add click event to the submit button
      submitButton.addEventListener('click', function(e) {
        // Prevent the default form submission
        e.preventDefault();
        
        // Get form data
        const formData = new FormData(contactForm);
        const formDataObj = {};
        
        // Convert FormData to object
        formData.forEach(function(value, key) {
          formDataObj[key] = value;
        });
        
        // Send data to webhook
        fetch('https://api.umbral.ai/webhook/3fdb6c95-c301-455e-9bde-dffbe4590639', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(formDataObj)
        })
        .then(function(response) {
          if (response.ok) {
            // Show success message
            formStatus.classList.remove('hidden');
            successMessage.classList.remove('hidden');
            errorMessage.classList.add('hidden');
            
            // Reset form fields
            contactForm.querySelectorAll('input, textarea, select').forEach(function(field) {
              field.value = '';
            });
          } else {
            // Show error message
            formStatus.classList.remove('hidden');
            errorMessage.classList.remove('hidden');
            successMessage.classList.add('hidden');
            console.error('Form submission failed');
          }
        })
        .catch(function(error) {
          // Show error message
          formStatus.classList.remove('hidden');
          errorMessage.classList.remove('hidden');
          successMessage.classList.add('hidden');
          console.error('Error submitting form:', error);
        });
      });
      
      // Also handle the form submit event as a backup
      contactForm.addEventListener('submit', function(e) {
        e.preventDefault();
      });
    }
  });
</script>
